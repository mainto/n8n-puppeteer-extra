name: Auto-Build Custom n8n (External Browser)

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 * * * *'  # Every hour
  workflow_dispatch:

jobs:
  check-and-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get digest of n8n:stable
        id: get_digest
        run: |
          digest=$(curl -s 'https://hub.docker.com/v2/repositories/n8nio/n8n/tags/stable' \
            | jq -r '.images[0].digest')
          echo "digest=$digest" >> $GITHUB_OUTPUT

      - name: Find matching version tag by digest
        id: find_tag
        run: |
          digest="${{ steps.get_digest.outputs.digest }}"
          version=$(curl -s 'https://hub.docker.com/v2/repositories/n8nio/n8n/tags/?page_size=100' \
            | jq -r --arg digest "$digest" \
            '.results[] | select(.images[]?.digest == $digest) | .name' \
            | grep -E '^[0-9]+\.[0-9]+\.[0-9]+$' \
            | sort -Vr | head -n 1)
          echo "n8n_tag=$version" >> $GITHUB_OUTPUT

      - name: Check if tag exists on GHCR
        id: tag_exists
        run: |
          tag=${{ steps.find_tag.outputs.n8n_tag }}
          exists=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            https://ghcr.io/v2/${{ github.repository }}/manifests/$tag \
            | jq -e .errors > /dev/null; echo $?)
          echo "exists=$exists" >> $GITHUB_OUTPUT

      - name: Exit if image already exists
        if: steps.tag_exists.outputs.exists == '0'
        run: echo "Image already exists. Skipping." && exit 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: mainto
          password: ${{ secrets.CR_PAT }}

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ steps.find_tag.outputs.n8n_tag }}
            ghcr.io/${{ github.repository }}:latest
